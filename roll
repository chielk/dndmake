#!/usr/bin/env python3
# (c) Chiel Kooijman 2014
from dndhelper.dice import roll, E, min_val, max_val, DiceExpression


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description='Roll some dice')
    parser.add_argument('expression', type=str, nargs='+',
                        help='expression (e.g. 3d6+3)')
    parser.add_argument("-v", "--verbose", action="count", dest="verbosity",
                        help="print individual dice and constants")
    mode = parser.add_mutually_exclusive_group()
    mode.add_argument("-e", "--expectancy", dest="mode", const="E",
                        action="store_const",
                        help="print individual dice and constants and show " +
                             "the expectancy, min and max")
    mode.add_argument("--min", dest="mode", const="min", action="store_const",
                        help="print minimum outcome")
    mode.add_argument("--max", dest="mode", const="max", action="store_const",
                        help="print maximum outcome")
    args = parser.parse_args()
    if not args.verbosity:
        args.verbosity = 0

    dice_expression = DiceExpression("".join(args.expression))
    exp = E(dice_expression)
    vmin = min_val(dice_expression)
    vmax = max_val(dice_expression)

    # Output
    if args.verbosity < 1:
        if args.mode == "E":
            print(exp, end="")
        elif args.mode == "min":
            print(vmin, end="")
        elif args.mode == "max":
            print(vmax, end="")
        else:
            print(roll(dice_expression)['total'], end=" ")
    else:
        result = roll(dice_expression)
        print('{} -> {}'.format(result['rolls'], result['total']), end=" ")
        if args.verbosity and args.verbosity > 0:  # Print expectancy
            print("\t(exp: {}, min: {}, max: {}".format(exp, vmin, vmax),
                  end=")")
    print()
